# Generated by Django 5.2.4 on 2025-07-19 06:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internal_id', models.AutoField(primary_key=True, serialize=False)),
                ('katomart_id', models.UUIDField(blank=True, default=None, null=True)),
                ('external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('formatted_name', models.CharField(blank=True, max_length=128, null=True)),
                ('teacher', models.CharField(blank=True, max_length=256, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_content_listed', models.BooleanField(default=False)),
                ('content_list_date', models.BigIntegerField(blank=True, null=True)),
                ('content_list_type', models.CharField(blank=True, max_length=64, null=True)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('download_date', models.BigIntegerField(blank=True, null=True)),
                ('download_type', models.CharField(blank=True, max_length=64, null=True)),
                ('download_path', models.CharField(blank=True, max_length=512, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('unlocks_at', models.BigIntegerField(blank=True, null=True)),
                ('has_drm', models.BooleanField(default=False)),
                ('course_expires', models.BooleanField(default=False)),
                ('access_expiration', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internal_id', models.AutoField(primary_key=True, serialize=False)),
                ('katomart_id', models.UUIDField(blank=True, default=None, null=True)),
                ('external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('formatted_name', models.CharField(blank=True, max_length=128, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('unlocks_at', models.BigIntegerField(blank=True, null=True)),
                ('has_drm', models.BooleanField(default=False)),
                ('is_content_listed', models.BooleanField(default=False)),
                ('content_list_date', models.BigIntegerField(blank=True, null=True)),
                ('content_list_type', models.CharField(blank=True, max_length=64, null=True)),
                ('should_download', models.BooleanField(default=True)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('download_date', models.BigIntegerField(blank=True, null=True)),
                ('download_type', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('base_url', models.CharField(blank=True, max_length=512, null=True)),
                ('active', models.BooleanField(default=True)),
                ('account_requires_specific_url', models.BooleanField(default=False)),
                ('url_description', models.CharField(blank=True, max_length=512, null=True)),
                ('may_have_issues', models.BooleanField(default=False)),
                ('has_issues', models.BooleanField(default=False)),
                ('issues_description', models.CharField(blank=True, max_length=512, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debug', models.BooleanField(default=False)),
                ('download_path', models.CharField(max_length=512)),
                ('should_download_drm_content', models.BooleanField(default=False)),
                ('ffmpeg_available', models.BooleanField(default=False)),
                ('ffmpeg_path', models.CharField(blank=True, max_length=512, null=True)),
                ('bento4_available', models.BooleanField(default=False)),
                ('bento4_path', models.CharField(blank=True, max_length=512, null=True)),
                ('aria2c_available', models.BooleanField(default=False)),
                ('aria2c_path', models.CharField(blank=True, max_length=512, null=True)),
                ('geckodriver_available', models.BooleanField(default=False)),
                ('geckodriver_path', models.CharField(blank=True, max_length=512, null=True)),
                ('chromedriver_available', models.BooleanField(default=False)),
                ('chromedriver_path', models.CharField(blank=True, max_length=512, null=True)),
                ('mkvtoolnix_available', models.BooleanField(default=False)),
                ('mkvtoolnix_path', models.CharField(blank=True, max_length=512, null=True)),
                ('rclone_available', models.BooleanField(default=False)),
                ('rclone_path', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internal_id', models.AutoField(primary_key=True, serialize=False)),
                ('katomart_id', models.UUIDField(blank=True, default=None, null=True)),
                ('external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('formatted_name', models.CharField(blank=True, max_length=128, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('is_primary_content', models.BooleanField(default=False)),
                ('is_extra_content', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('should_download', models.BooleanField(default=True)),
                ('unlocks_at', models.BigIntegerField(blank=True, null=True)),
                ('has_drm', models.BooleanField(default=False)),
                ('is_decrypted', models.BooleanField(default=False)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('download_date', models.BigIntegerField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=64, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='core.lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internal_id', models.AutoField(primary_key=True, serialize=False)),
                ('katomart_id', models.UUIDField(blank=True, default=None, null=True)),
                ('external_id', models.CharField(blank=True, max_length=128, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('formatted_name', models.CharField(blank=True, max_length=128, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('unlocks_at', models.BigIntegerField(blank=True, null=True)),
                ('has_drm', models.BooleanField(default=False)),
                ('is_content_listed', models.BooleanField(default=False)),
                ('content_list_date', models.BigIntegerField(blank=True, null=True)),
                ('content_list_type', models.CharField(blank=True, max_length=64, null=True)),
                ('should_download', models.BooleanField(default=True)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('download_date', models.BigIntegerField(blank=True, null=True)),
                ('download_type', models.CharField(blank=True, max_length=64, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='core.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.module'),
        ),
        migrations.AddField(
            model_name='course',
            name='platform',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='core.platform'),
        ),
        migrations.CreateModel(
            name='PlatformAuth',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=256)),
                ('password_encrypted', models.TextField(blank=True, null=True)),
                ('token_encrypted', models.TextField(blank=True, null=True)),
                ('session_cookie_encrypted', models.TextField(blank=True, null=True)),
                ('token_type', models.CharField(blank=True, max_length=32, null=True)),
                ('state', models.JSONField(blank=True, default=dict)),
                ('refresh_token_encrypted', models.TextField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auths', to='core.platform')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='platform_auths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='auth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='core.platformauth'),
        ),
        migrations.CreateModel(
            name='PlatformURL',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('url_kind', models.CharField(blank=True, max_length=64, null=True)),
                ('has_f_string', models.BooleanField(default=False)),
                ('f_string_params', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('needs_specific_headers', models.BooleanField(default=False)),
                ('specific_headers', models.TextField(blank=True, null=True)),
                ('accepts_raw_request', models.BooleanField(default=False)),
                ('has_visitation_limit', models.BooleanField(default=False)),
                ('visitation_limit', models.IntegerField(blank=True, null=True)),
                ('visitation_count', models.IntegerField(default=0)),
                ('url', models.CharField(blank=True, max_length=1024, null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='core.platform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download_path', models.CharField(blank=True, max_length=512, null=True)),
                ('ffmpeg_path', models.CharField(blank=True, max_length=512, null=True)),
                ('bento4_path', models.CharField(blank=True, max_length=512, null=True)),
                ('aria2c_path', models.CharField(blank=True, max_length=512, null=True)),
                ('geckodriver_path', models.CharField(blank=True, max_length=512, null=True)),
                ('chromedriver_path', models.CharField(blank=True, max_length=512, null=True)),
                ('mkvtoolnix_path', models.CharField(blank=True, max_length=512, null=True)),
                ('rclone_path', models.CharField(blank=True, max_length=512, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_config', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFormattedName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=32)),
                ('object_id', models.IntegerField()),
                ('formatted_name', models.CharField(max_length=128)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formatted_names', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
    ]
